{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "A#",
  "patterns": [
    {
      "match": "(import) ([a-zA-Z-]+)",
      "captures": {
        "1": { "patterns": [{ "include": "#keywords" }] },
        "2": { "name": "support.class.asharp" }
      }
    },
    {
      "begin": "(?<=import) (?=\\()",
      "end": "(?<=\\))",
      "patterns": [{ "include": "#punctuation" }, { "include": "#variables" }]
    },
    { "include": "#keywords" },
    { "include": "#booleans" },
    {
      "match": "(?<=let|export) ([a-zA-Z][\\w-]*)(( [a-zA-Z][\\w-]*)+)",
      "captures": {
        "1": { "name": "entity.name.function.asharp" },
        "2": { "name": "variable.parameter.asharp" }
      }
    },
    { "include": "#arrow-function" },
    { "include": "#composition" },
    {
      "match": "([a-zA-Z][\\w-]*) (\\(|\".*\"|[\\w-\".]+[ );\n])",
      "captures": {
        "1": { "name": "entity.name.function.asharp" },
        "2": {
          "patterns": [
            { "include": "#variables" },
            { "include": "#arrow-function" },
            { "include": "#punctuation" },
            { "include": "#keywords" },
            { "include": "#composition" },
            { "include": "#strings" },
            { "include": "#numbers" },
            { "include": "#booleans" }
          ]
        }
      }
    },
    {
      "name": "comment.asharp",
      "match": "\\/\\/.+"
    },
    { "include": "#object" },
    { "include": "#variables" },
    { "include": "#punctuation" },
    { "include": "#strings" },
    { "include": "#numbers" }
  ],
  "repository": {
    "object": {
      "patterns": [
        {
          "name": "support.class",
          "match": "[a-zA-Z-]+(?=\\.)"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.name",
          "match": "[a-zA-Z][\\w-]*"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.asharp",
          "match": "[{}\\[\\]\\(\\)\\|\\?\\/\\-;=+*<>:@]"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.asharp",
          "match": "\\b(let|if|else|then|import|from|export)\\b"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.asharp",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.asharp",
          "match": "\\d+(\\.\\d+)?"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.asharp",
      "begin": "\"",
      "end": "\""
    },
    "arrow-function": {
      "patterns": [
        {
          "name": "variable.parameter.asharp",
          "match": "(([a-zA-Z-]+ )+)(?=\\=\\>)"
        }
      ]
    },
    "composition": {
      "patterns": [
        {
          "match": "(?<=(?:\\|>|>>)) ?([\\w-]+\\.)?([\\w-]+)",
          "captures": {
            "1": { "patterns": [{ "include": "#object" }] },
            "2": { "name": "entity.name.function.asharp" }
          }
        }
      ]
    }
  },
  "scopeName": "source.asharp"
}
